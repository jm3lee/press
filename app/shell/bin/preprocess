#!/usr/bin/env bash
set -euo pipefail
DEBUG=0
if [ $DEBUG -eq 1 ]; then set -x; fi

# process_file <input_markdown>
#   - mirrors: build/%.md: %.md
#   - runs includefilter 3Ã— (3 levels of include expansion)
#   - then runs link, then emojify
process_file() {
    local input="$1"
    # strip leading src/ if present, then prefix with build/
    local relpath="${input#src/}"
    local output="build/${relpath}"

    # ensure build directory exists
    mkdir -p "$(dirname "$output")"

    # Include and process Markdown files up to three levels deep
    for _ in 1 2 3; do
        includefilter build "$input" "$output"
    done

    # Render links
    python3 -m pie.render_template build/static/index.json "$output" > "$output.$$"
    mv "$output.$$" "$output"
    if [ $DEBUG -eq 1 ]; then cat "$output"; fi

    # run emojify, write to a temp file and atomically move
    emojify < "$output" > "$output.tmp"
    mv "$output.tmp" "$output"
}

# main
if [[ $# -lt 1 ]]; then
    echo "Usage: $0 <markdown-file> [more-markdown-files...]"
    exit 1
fi

for md in "$@"; do
    process_file "$md"
done
