#!/bin/bash

set -euo pipefail

# Prepend /app/bin to PATH so that any custom commands (e.g., add) are found.
export PATH=/app/bin:$PATH

# Handler: kill the sleep (if running) and exit
_on_signal() {
    echo "Caught signal, exiting immediately."
    [[ -n "${_SLEEP_PID-}" ]] && kill "$_SLEEP_PID" 2>/dev/null || true
    exit 0
}

# Trap common termination signals
trap _on_signal SIGINT SIGTERM SIGHUP

echo "Starting work… (PID $$)"

# Main processing loop: runs indefinitely
while true; do
    # Remove any Zone.Identifier ADS leftovers in /app/input
    # Don't know why WSL creates these files.
    rm -f /app/input/*:Zone.Identifier

    # Brief pause to avoid consuming 100% CPU
    # Start sleep in the background and record its PID
    echo "Sleeping for 1 second..."
    sleep 1 &
    _SLEEP_PID=$!

    # Wait for either sleep to finish, or a signal to arrive
    wait "$_SLEEP_PID"

    # Clear PID so handler won’t try to kill a non‑existent process
    unset _SLEEP_PID
done
