#!/usr/bin/env bash
#
# Description:
#   Perform a full release build without requiring make.
#   The script mirrors the `release` target from redo.mk.
#
# Usage:
#   bin/release
#
# Environment variables:
#   VERBOSE   - Passed to make (default: 0)
#   SRC_DIR   - Source directory (default: src)
#   BUILD_DIR - Build directory (default: build)
#
# Steps:
#   1. make distclean
#   2. docker compose build shell
#   3. make
#   4. make test
#   5. docker compose build release
#
set -euo pipefail

usage() {
  cat <<'EOF'
Usage: bin/release [-k]

Options:
  -k  Ignore test errors and continue building the release image.
EOF
}

IGNORE_TEST_ERRORS=0

while getopts ":k" opt; do
  case "$opt" in
    k)
      IGNORE_TEST_ERRORS=1
      ;;
    *)
      usage >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

if [[ $# -ne 0 ]]; then
  usage >&2
  exit 1
fi

ROOT="$(cd "$(dirname "$0")/.." && pwd)"
cd "$ROOT"

VERBOSE="${VERBOSE:-0}"
SRC_DIR="${SRC_DIR:-src}"
BUILD_DIR="${BUILD_DIR:-build}"

COMPOSE_FILE="docker-compose.yml"

DOCKER_COMPOSE=(docker compose -f "$COMPOSE_FILE")

MAKE_ARGS=(-f redo.mk VERBOSE="$VERBOSE" SRC_DIR="$SRC_DIR" BUILD_DIR="$BUILD_DIR")

run_make() {
  make "${MAKE_ARGS[@]}" "$@"
}

cleanup() {
  "${DOCKER_COMPOSE[@]}" down --remove-orphans
}
trap cleanup EXIT

echo "Starting release build..."

echo "Stopping existing containers..."
"${DOCKER_COMPOSE[@]}" down --remove-orphans >/dev/null 2>&1 || true
echo "Starting dragonfly..."
"${DOCKER_COMPOSE[@]}" up -d --remove-orphans dragonfly
echo "Running distclean..."
run_make distclean
echo "Building shell image..."
"${DOCKER_COMPOSE[@]}" build shell
echo "Running make..."
run_make
echo "Starting nginx-test..."
"${DOCKER_COMPOSE[@]}" up -d --build --remove-orphans nginx-test
echo "Running make test..."
if ! run_make test; then
  if (( IGNORE_TEST_ERRORS )); then
    echo "Warning: make test failed, continuing because -k was specified." >&2
  else
    exit 1
  fi
fi
echo "Running pytest..."
if ! run_make pytest; then
  if (( IGNORE_TEST_ERRORS )); then
    echo "Warning: pytest failed, continuing because -k was specified." >&2
  else
    exit 1
  fi
fi
echo "Building release image..."
"${DOCKER_COMPOSE[@]}" build release

echo "Release Build Successful"
