services:
  nginx:
    build:
      context: .
      dockerfile: app/nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  nginx-dev:
    build:
      context: .
      dockerfile: app/nginx/Dockerfile
    container_name: nginx-dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # Mount your HTML files. Adjust path to match how your config is set up.
      - ./build:/usr/share/nginx/html

      # Mount your custom NGINX config as /etc/nginx/conf.d/default.conf
      # - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # If you're using certbot or any Let's Encrypt management inside/outside the container
      # - /etc/letsencrypt:/etc/letsencrypt
    restart: unless-stopped

  sync:
    build: app/s3
    entrypoint: ["/app/bin/sync"]
    volumes:
      - ./s3:/s3

  seed:
    build: app/s3
    entrypoint: ["/app/bin/seed"]
    volumes:
      - ./s3:/s3

  webp:
    build: app/webp
    entrypoint: ["/app/bin/service"]
    volumes:
      - ./app/webp/input:/app/input
      - ./app/webp/output:/app/output
      - ./log:/app/log

  # Default port is 6379. Not exposed to the host to avoid port conflicts.
  # You can run redis-cli within this container.
  #   docker compose exec dragonfly redis-cli
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    container_name: dragonfly

  shell:
    build: dist/app/shell
    entrypoint: ["bash"]
    environment:
      OPENAI_API_KEY: "${OPENAI_API_KEY}"
    volumes:
      - ./:/data
      - ./dist/app/shell/mk:/app/mk
      - ./dist/app/shell/bin:/app/bin
      - ./dist/app/shell/py/pie/pie:/press/py/pie/pie
      - ./dist/app/shell/py/pie/tests:/press/py/pie/tests
      - ./dist/dep.mk:/app/mk/dep.mk
