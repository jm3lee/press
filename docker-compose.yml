services:
  nginx:
    build:
      context: .
      dockerfile: ./app/nginx/Dockerfile
      args:
        NGINX_CONF: app/nginx/prod.conf
    restart: unless-stopped

  # No ports are exposed so we can use a private instance to check for broken
  # links. All scripts are executed within a container.
  nginx-test:
    build:
      context: .
      dockerfile: ./app/nginx/Dockerfile

  nginx-dev:
    build:
      context: .
      dockerfile: ./app/nginx/Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./build:/usr/share/nginx/html
    restart: unless-stopped

  sync:
    build: ./app/s3
    container_name: press-sync
    entrypoint: ["/app/bin/sync"]
    env_file: .env
    volumes:
      - ../s3:/s3

  seed:
    build: ./app/s3
    container_name: press-seed
    entrypoint: ["/app/bin/seed"]
    env_file: .env
    volumes:
      - ../s3:/s3

  webp:
    build: ./app/webp
    container_name: press-webp
    entrypoint: ["/app/bin/service"]
    volumes:
      - ./app/webp/input:/app/input
      - ./app/webp/output:/app/output
      - ../log:/app/log

  # Default port is 6379. Not exposed to the host to avoid port conflicts.
  # You can run redis-cli within this container.
  #   docker compose exec dragonfly redis-cli
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    # Useful in avoiding conflicts from multiple active instances of press projects.
    container_name: press-dragonfly

  shell:
    image: press-shell
    build: ./app/shell
    container_name: press-shell
    entrypoint: ["bash"]
    env_file: .env
    volumes:
      - ./:/data
      - ./app/shell/mk:/app/mk
      - ./app/shell/bin:/app/bin
      - ./app/shell/py/pie/pie:/press/py/pie/pie
      - ./app/shell/py/pie/tests:/press/py/pie/tests
      - ./src/dep.mk:/app/mk/dep.mk

  release:
    image: press-release
    build:
      context: .
      dockerfile: ./app/release/Dockerfile

  pdoc:
    build: ./app/pdoc
    container_name: press-pdoc
    entrypoint: ["pdoc", "--http", "0.0.0.0:8080", "pie"]
    ports:
      - "8080:8080"
    volumes:
      - ./app/shell/py/pie:/pie
    profiles: ["pdoc"]
